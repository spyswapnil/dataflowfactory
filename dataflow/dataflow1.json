{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "employee"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable2",
						"type": "DatasetReference"
					},
					"name": "departments"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable2",
						"type": "DatasetReference"
					},
					"name": "department"
				}
			],
			"transformations": [
				{
					"name": "Join1"
				},
				{
					"name": "AlterRow1"
				}
			],
			"script": "source(output(\n\t\tempid as integer,\n\t\tempname as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tlimit: 100,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> employee\nsource(output(\n\t\tempid as integer,\n\t\tdeptid as integer,\n\t\tdeptname as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> departments\nemployee, departments join(employee@empid == departments@empid,\n\tjoinType:'inner',\n\tbroadcast: 'none')~> Join1\nJoin1 alterRow(deleteIf(employee@empid!=departments@empid)) ~> AlterRow1\nAlterRow1 sink(input(\n\t\tempid as integer,\n\t\tdeptid as integer,\n\t\tdeptname as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:true,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tkeys:['empid'],\n\tformat: 'table',\n\tmapColumn(\n\t\tempid = employee@empid,\n\t\tdeptid,\n\t\tdeptname\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> department"
		}
	}
}